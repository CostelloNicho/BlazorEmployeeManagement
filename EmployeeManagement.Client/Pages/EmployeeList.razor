@page "/"
@using EmployeeManagement.Model
@using System.Collections.Generic;
@using EmployeeManagement.Client.Services;

<input type="checkbox" id="showFooter" @bind="ShowFooter" />
<label for="showFooter">Show Footer</label>

@if (Employees == null)
{
    <div class="spinner"></div>
}
else
{
<div class="card-deck">
    @foreach (var employee in Employees)
    {
        <DisplayEmployee Employee="employee" ShowFooter="ShowFooter"
                         OnEmployeeSelection="EmployeeSelectionChanged">
        </DisplayEmployee>
    }
</div>
}


@code{
    public IEnumerable<Employee> Employees { get; set; }

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    public bool ShowFooter { get; set; } = true;

    protected int SelectedEmployeesCount { get; set; } = 0;

    protected void EmployeeSelectionChanged(bool isSelected)
    {
        if (isSelected)
        {
            SelectedEmployeesCount++;
        }
        else
        {
            SelectedEmployeesCount--;
        }
    }


    protected override async Task OnInitializedAsync()
    {
        //await Task.Run(LoadEmployeesHardCoded);
        Employees = await EmployeeService.GetEmployees();
    }

    private void LoadEmployeesHardCoded()
    {
        System.Threading.Thread.Sleep(2000);
        Employee e1 = new Employee
        {
            EmployeeId = 0,
            FirstName = "John",
            LastName = "Snow",
            Email = "JS@gmail.com",
            DateOfBirth = new DateTime(1989, 10, 5),
            Gender = Gender.Male,
            DepartmentId = 0,
            PhotoPath = ""

        };

        Employee e2 = new Employee
        {
            EmployeeId = 1,
            FirstName = "Jamie",
            LastName = "Lannister",
            Email = "JL1v1MeBro@gmail.com",
            DateOfBirth = new DateTime(1980, 3, 12),
            Gender = Gender.Male,
            DepartmentId = 1,
            PhotoPath = "",
        };

        Employees = new List<Employee> { e1, e2 };

    }

}